
lab3_master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000928  000009bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000928  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800124  00800124  000009e0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009e0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cec  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b2  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000665  00000000  00000000  00002076  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000dc  00000000  00000000  000026dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000621  00000000  00000000  000027b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002f9  00000000  00000000  00002dd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000030d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  2c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  30:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 ca 01 	jmp	0x394	; 0x394 <__vector_18>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  58:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  5c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  60:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  68:	f5 01       	movw	r30, r10
  6a:	fc 01       	movw	r30, r24
  6c:	03 02       	muls	r16, r19
  6e:	0d 02       	muls	r16, r29
  70:	17 02       	muls	r17, r23
  72:	21 02       	muls	r18, r17
  74:	2b 02       	muls	r18, r27

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf ef       	ldi	r28, 0xFF	; 255
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61

00000082 <__do_copy_data>:
  82:	11 e0       	ldi	r17, 0x01	; 1
  84:	a0 e0       	ldi	r26, 0x00	; 0
  86:	b1 e0       	ldi	r27, 0x01	; 1
  88:	e8 e2       	ldi	r30, 0x28	; 40
  8a:	f9 e0       	ldi	r31, 0x09	; 9
  8c:	02 c0       	rjmp	.+4      	; 0x92 <__do_copy_data+0x10>
  8e:	05 90       	lpm	r0, Z+
  90:	0d 92       	st	X+, r0
  92:	a4 32       	cpi	r26, 0x24	; 36
  94:	b1 07       	cpc	r27, r17
  96:	d9 f7       	brne	.-10     	; 0x8e <__do_copy_data+0xc>

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a4 e2       	ldi	r26, 0x24	; 36
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a8 32       	cpi	r26, 0x28	; 40
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  ac:	0c 94 92 04 	jmp	0x924	; 0x924 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <initUART9600>:
 *  Author: njfg0
 */ 
#include "com_uart.h"
void initUART9600(void){
	//configurar pines tx y rx
	DDRD &=~(1<<DDD0);//entrada
  b4:	8a b1       	in	r24, 0x0a	; 10
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<DDD1);//salida Tx
  ba:	8a b1       	in	r24, 0x0a	; 10
  bc:	82 60       	ori	r24, 0x02	; 2
  be:	8a b9       	out	0x0a, r24	; 10
	
	//configurar registro A modo fast u2x0 en 1
	UCSR0A=0;
  c0:	e0 ec       	ldi	r30, 0xC0	; 192
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	10 82       	st	Z, r1
	UCSR0A|=(1<<U2X0);
  c6:	80 81       	ld	r24, Z
  c8:	82 60       	ori	r24, 0x02	; 2
  ca:	80 83       	st	Z, r24
	
	//configurar registro B, habilotar isr rx, bits para habilitar RX y TX
	UCSR0B=0;
  cc:	e1 ec       	ldi	r30, 0xC1	; 193
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	10 82       	st	Z, r1
	UCSR0B|=(1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
  d2:	80 81       	ld	r24, Z
  d4:	88 69       	ori	r24, 0x98	; 152
  d6:	80 83       	st	Z, r24
	
	//Configurar registro C<Frame asincrono 8 bits de datos sin pariedad, 1 bit de stop
	UCSR0C=0;
  d8:	e2 ec       	ldi	r30, 0xC2	; 194
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	10 82       	st	Z, r1
	UCSR0C|=(1<<UCSZ01)|(1<<UCSZ00);
  de:	80 81       	ld	r24, Z
  e0:	86 60       	ori	r24, 0x06	; 6
  e2:	80 83       	st	Z, r24
	
	//baudrate = 207 con % de error igual a 0.16% con 9600
	UBRR0=207;
  e4:	8f ec       	ldi	r24, 0xCF	; 207
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  ec:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  f0:	08 95       	ret

000000f2 <writetxtUART>:
			leer_uart=0;
		}
		
    }
}
void writetxtUART(char* texto){
  f2:	ac 01       	movw	r20, r24
	uint8_t i;
	for (i=0;texto[i]!='\0';i++){
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	09 c0       	rjmp	.+18     	; 0x10a <writetxtUART+0x18>
		while(!(UCSR0A&(1<<UDRE0)));//esperar hasta que el udre0 esté en 1
  f8:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  fc:	95 ff       	sbrs	r25, 5
  fe:	fc cf       	rjmp	.-8      	; 0xf8 <writetxtUART+0x6>
		UDR0=texto[i];//cuando i nulo se acaba
 100:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
		flag=0;
 104:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		
    }
}
void writetxtUART(char* texto){
	uint8_t i;
	for (i=0;texto[i]!='\0';i++){
 108:	2f 5f       	subi	r18, 0xFF	; 255
 10a:	fa 01       	movw	r30, r20
 10c:	e2 0f       	add	r30, r18
 10e:	f1 1d       	adc	r31, r1
 110:	30 81       	ld	r19, Z
 112:	31 11       	cpse	r19, r1
 114:	f1 cf       	rjmp	.-30     	; 0xf8 <writetxtUART+0x6>
		while(!(UCSR0A&(1<<UDRE0)));//esperar hasta que el udre0 esté en 1
		UDR0=texto[i];//cuando i nulo se acaba
		flag=0;
	}
}
 116:	08 95       	ret

00000118 <main>:

void refreshPort(uint8_t valor);
void writetxtUART(char* texto);

int main(void)
{
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	cd b7       	in	r28, 0x3d	; 61
 11e:	de b7       	in	r29, 0x3e	; 62
 120:	ce 56       	subi	r28, 0x6E	; 110
 122:	d1 09       	sbc	r29, r1
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
	cli();
 12e:	f8 94       	cli
	initUART9600();
 130:	0e 94 5a 00 	call	0xb4	; 0xb4 <initUART9600>
	DDRD|=0xFC;
 134:	8a b1       	in	r24, 0x0a	; 10
 136:	8c 6f       	ori	r24, 0xFC	; 252
 138:	8a b9       	out	0x0a, r24	; 10
	DDRB|=0x03;
 13a:	84 b1       	in	r24, 0x04	; 4
 13c:	83 60       	ori	r24, 0x03	; 3
 13e:	84 b9       	out	0x04, r24	; 4
	sei();
 140:	78 94       	sei
	DDRB|=(1<<DDB0)|(1<<DDB1);
 142:	84 b1       	in	r24, 0x04	; 4
 144:	83 60       	ori	r24, 0x03	; 3
 146:	84 b9       	out	0x04, r24	; 4
	spiInit(SPI_MASTER_OSC_DIV16,SPI_DATA_ORDER_MSB,SPI_CLOCK_IDLE_LOW,SPI_CLOCK_FIRST_EDGE);
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	40 e0       	ldi	r20, 0x00	; 0
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	83 e5       	ldi	r24, 0x53	; 83
 150:	0e 94 dd 01 	call	0x3ba	; 0x3ba <spiInit>
    /* Replace with your application code */
    while (1) 
    {
		PORTB &=~(1<<PORTB2);
 154:	85 b1       	in	r24, 0x05	; 5
 156:	8b 7f       	andi	r24, 0xFB	; 251
 158:	85 b9       	out	0x05, r24	; 5
		spiWrite(0);
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	0e 94 42 02 	call	0x484	; 0x484 <spiWrite>
		valorpot1=spiRead();
 160:	0e 94 44 02 	call	0x488	; 0x488 <spiRead>
 164:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <valorpot1>
		PORTB|=(1<<PORTB2);
 168:	85 b1       	in	r24, 0x05	; 5
 16a:	84 60       	ori	r24, 0x04	; 4
 16c:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16e:	2f ef       	ldi	r18, 0xFF	; 255
 170:	84 e3       	ldi	r24, 0x34	; 52
 172:	9c e0       	ldi	r25, 0x0C	; 12
 174:	21 50       	subi	r18, 0x01	; 1
 176:	80 40       	sbci	r24, 0x00	; 0
 178:	90 40       	sbci	r25, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <main+0x5c>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <main+0x66>
 17e:	00 00       	nop
		_delay_ms(250);
		
		PORTB &=~(1<<PORTB2);
 180:	85 b1       	in	r24, 0x05	; 5
 182:	8b 7f       	andi	r24, 0xFB	; 251
 184:	85 b9       	out	0x05, r24	; 5
		spiWrite('1');
 186:	81 e3       	ldi	r24, 0x31	; 49
 188:	0e 94 42 02 	call	0x484	; 0x484 <spiWrite>
		valorpot2=spiRead();
 18c:	0e 94 44 02 	call	0x488	; 0x488 <spiRead>
 190:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <valorpot2>
		PORTB|=(1<<PORTB2);
 194:	85 b1       	in	r24, 0x05	; 5
 196:	84 60       	ori	r24, 0x04	; 4
 198:	85 b9       	out	0x05, r24	; 5
 19a:	2f ef       	ldi	r18, 0xFF	; 255
 19c:	84 e3       	ldi	r24, 0x34	; 52
 19e:	9c e0       	ldi	r25, 0x0C	; 12
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <main+0x88>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0x92>
 1aa:	00 00       	nop
		_delay_ms(250);
		
		float mpot1=(valorpot1*5.0)/255.0;
 1ac:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <valorpot1>
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__floatsisf>
 1ba:	20 e0       	ldi	r18, 0x00	; 0
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	40 ea       	ldi	r20, 0xA0	; 160
 1c0:	50 e4       	ldi	r21, 0x40	; 64
 1c2:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__mulsf3>
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	4f e7       	ldi	r20, 0x7F	; 127
 1cc:	53 e4       	ldi	r21, 0x43	; 67
 1ce:	0e 94 b6 02 	call	0x56c	; 0x56c <__divsf3>
 1d2:	4b 01       	movw	r8, r22
 1d4:	5c 01       	movw	r10, r24
		float mpot2=(valorpot2*5.0)/255.0;
 1d6:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <valorpot2>
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__floatsisf>
 1e4:	20 e0       	ldi	r18, 0x00	; 0
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	40 ea       	ldi	r20, 0xA0	; 160
 1ea:	50 e4       	ldi	r21, 0x40	; 64
 1ec:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__mulsf3>
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	4f e7       	ldi	r20, 0x7F	; 127
 1f6:	53 e4       	ldi	r21, 0x43	; 67
 1f8:	0e 94 b6 02 	call	0x56c	; 0x56c <__divsf3>
 1fc:	6b 01       	movw	r12, r22
 1fe:	7c 01       	movw	r14, r24
		
		int enterov1=(int)mpot1;
 200:	c5 01       	movw	r24, r10
 202:	b4 01       	movw	r22, r8
 204:	0e 94 28 03 	call	0x650	; 0x650 <__fixsfsi>
 208:	2b 01       	movw	r4, r22
 20a:	3c 01       	movw	r6, r24
		int decimalv1=(int)((mpot1-enterov1)*100);
 20c:	07 2e       	mov	r0, r23
 20e:	00 0c       	add	r0, r0
 210:	88 0b       	sbc	r24, r24
 212:	99 0b       	sbc	r25, r25
 214:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__floatsisf>
 218:	9b 01       	movw	r18, r22
 21a:	ac 01       	movw	r20, r24
 21c:	c5 01       	movw	r24, r10
 21e:	b4 01       	movw	r22, r8
 220:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	48 ec       	ldi	r20, 0xC8	; 200
 22a:	52 e4       	ldi	r21, 0x42	; 66
 22c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__mulsf3>
 230:	0e 94 28 03 	call	0x650	; 0x650 <__fixsfsi>
 234:	8b 01       	movw	r16, r22
		
		int enterov2=(int)mpot2;
 236:	c7 01       	movw	r24, r14
 238:	b6 01       	movw	r22, r12
 23a:	0e 94 28 03 	call	0x650	; 0x650 <__fixsfsi>
 23e:	4b 01       	movw	r8, r22
 240:	5c 01       	movw	r10, r24
		int decimalv2=(int)((mpot2-enterov2)*100);
 242:	07 2e       	mov	r0, r23
 244:	00 0c       	add	r0, r0
 246:	88 0b       	sbc	r24, r24
 248:	99 0b       	sbc	r25, r25
 24a:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__floatsisf>
 24e:	9b 01       	movw	r18, r22
 250:	ac 01       	movw	r20, r24
 252:	c7 01       	movw	r24, r14
 254:	b6 01       	movw	r22, r12
 256:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	48 ec       	ldi	r20, 0xC8	; 200
 260:	52 e4       	ldi	r21, 0x42	; 66
 262:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__mulsf3>
 266:	0e 94 28 03 	call	0x650	; 0x650 <__fixsfsi>
 26a:	6b 01       	movw	r12, r22
		
		char mensaje1[5];
		mensaje1[0]='0'+enterov1;
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	84 0d       	add	r24, r4
 270:	ab 96       	adiw	r28, 0x2b	; 43
 272:	8f af       	std	Y+63, r24	; 0x3f
 274:	ab 97       	sbiw	r28, 0x2b	; 43
		mensaje1[1]='.';
 276:	0f 2e       	mov	r0, r31
 278:	fe e2       	ldi	r31, 0x2E	; 46
 27a:	6f 2e       	mov	r6, r31
 27c:	f0 2d       	mov	r31, r0
 27e:	ac 96       	adiw	r28, 0x2c	; 44
 280:	6f ae       	std	Y+63, r6	; 0x3f
 282:	ac 97       	sbiw	r28, 0x2c	; 44
		mensaje1[2]='0'+(decimalv1/10);
 284:	0f 2e       	mov	r0, r31
 286:	fa e0       	ldi	r31, 0x0A	; 10
 288:	ef 2e       	mov	r14, r31
 28a:	f1 2c       	mov	r15, r1
 28c:	f0 2d       	mov	r31, r0
 28e:	c8 01       	movw	r24, r16
 290:	b7 01       	movw	r22, r14
 292:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__divmodhi4>
 296:	60 5d       	subi	r22, 0xD0	; 208
 298:	ad 96       	adiw	r28, 0x2d	; 45
 29a:	6f af       	std	Y+63, r22	; 0x3f
 29c:	ad 97       	sbiw	r28, 0x2d	; 45
		mensaje1[3]='0'+(decimalv1%10);
 29e:	80 5d       	subi	r24, 0xD0	; 208
 2a0:	ae 96       	adiw	r28, 0x2e	; 46
 2a2:	8f af       	std	Y+63, r24	; 0x3f
 2a4:	ae 97       	sbiw	r28, 0x2e	; 46
		mensaje1[4]='V';
 2a6:	0f 2e       	mov	r0, r31
 2a8:	f6 e5       	ldi	r31, 0x56	; 86
 2aa:	7f 2e       	mov	r7, r31
 2ac:	f0 2d       	mov	r31, r0
 2ae:	af 96       	adiw	r28, 0x2f	; 47
 2b0:	7f ae       	std	Y+63, r7	; 0x3f
 2b2:	af 97       	sbiw	r28, 0x2f	; 47
		mensaje1[5]='\0';
 2b4:	e0 96       	adiw	r28, 0x30	; 48
 2b6:	1f ae       	std	Y+63, r1	; 0x3f
 2b8:	e0 97       	sbiw	r28, 0x30	; 48
		
		char mensaje[100];
		strcpy(mensaje,"Potenciometro 1:");
 2ba:	81 e1       	ldi	r24, 0x11	; 17
 2bc:	e1 e0       	ldi	r30, 0x01	; 1
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	8e 01       	movw	r16, r28
 2c2:	0f 5f       	subi	r16, 0xFF	; 255
 2c4:	1f 4f       	sbci	r17, 0xFF	; 255
 2c6:	d8 01       	movw	r26, r16
 2c8:	01 90       	ld	r0, Z+
 2ca:	0d 92       	st	X+, r0
 2cc:	8a 95       	dec	r24
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0x1b0>
		strcat(mensaje,mensaje1);
 2d0:	be 01       	movw	r22, r28
 2d2:	66 59       	subi	r22, 0x96	; 150
 2d4:	7f 4f       	sbci	r23, 0xFF	; 255
 2d6:	c8 01       	movw	r24, r16
 2d8:	0e 94 87 04 	call	0x90e	; 0x90e <strcat>
		
		char mensaje2[5];
		mensaje2[0]='0'+enterov2;
 2dc:	80 e3       	ldi	r24, 0x30	; 48
 2de:	88 0d       	add	r24, r8
 2e0:	a6 96       	adiw	r28, 0x26	; 38
 2e2:	8f af       	std	Y+63, r24	; 0x3f
 2e4:	a6 97       	sbiw	r28, 0x26	; 38
		mensaje2[1]='.';
 2e6:	a7 96       	adiw	r28, 0x27	; 39
 2e8:	6f ae       	std	Y+63, r6	; 0x3f
 2ea:	a7 97       	sbiw	r28, 0x27	; 39
		mensaje2[2]='0'+(decimalv2/10);
 2ec:	c6 01       	movw	r24, r12
 2ee:	b7 01       	movw	r22, r14
 2f0:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__divmodhi4>
 2f4:	60 5d       	subi	r22, 0xD0	; 208
 2f6:	a8 96       	adiw	r28, 0x28	; 40
 2f8:	6f af       	std	Y+63, r22	; 0x3f
 2fa:	a8 97       	sbiw	r28, 0x28	; 40
		mensaje2[3]='0'+(decimalv2%10);
 2fc:	80 5d       	subi	r24, 0xD0	; 208
 2fe:	a9 96       	adiw	r28, 0x29	; 41
 300:	8f af       	std	Y+63, r24	; 0x3f
 302:	a9 97       	sbiw	r28, 0x29	; 41
		mensaje2[4]='V';
 304:	aa 96       	adiw	r28, 0x2a	; 42
 306:	7f ae       	std	Y+63, r7	; 0x3f
 308:	aa 97       	sbiw	r28, 0x2a	; 42
		mensaje2[5]='\0';
 30a:	ab 96       	adiw	r28, 0x2b	; 43
 30c:	1f ae       	std	Y+63, r1	; 0x3f
 30e:	ab 97       	sbiw	r28, 0x2b	; 43
		
		strcat(mensaje," Potenciometro 2:");
 310:	d8 01       	movw	r26, r16
 312:	0d 90       	ld	r0, X+
 314:	00 20       	and	r0, r0
 316:	e9 f7       	brne	.-6      	; 0x312 <main+0x1fa>
 318:	11 97       	sbiw	r26, 0x01	; 1
 31a:	82 e1       	ldi	r24, 0x12	; 18
 31c:	e2 e1       	ldi	r30, 0x12	; 18
 31e:	f1 e0       	ldi	r31, 0x01	; 1
 320:	01 90       	ld	r0, Z+
 322:	0d 92       	st	X+, r0
 324:	8a 95       	dec	r24
 326:	e1 f7       	brne	.-8      	; 0x320 <main+0x208>
		strcat(mensaje,mensaje2);
 328:	be 01       	movw	r22, r28
 32a:	6b 59       	subi	r22, 0x9B	; 155
 32c:	7f 4f       	sbci	r23, 0xFF	; 255
 32e:	c8 01       	movw	r24, r16
 330:	0e 94 87 04 	call	0x90e	; 0x90e <strcat>
		strcat(mensaje,"\n");
 334:	f8 01       	movw	r30, r16
 336:	01 90       	ld	r0, Z+
 338:	00 20       	and	r0, r0
 33a:	e9 f7       	brne	.-6      	; 0x336 <main+0x21e>
 33c:	31 97       	sbiw	r30, 0x01	; 1
 33e:	f1 82       	std	Z+1, r15	; 0x01
 340:	e0 82       	st	Z, r14
		writetxtUART(mensaje);
 342:	c8 01       	movw	r24, r16
 344:	0e 94 79 00 	call	0xf2	; 0xf2 <writetxtUART>
		
		if (leer_uart==1){
 348:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
 34c:	81 30       	cpi	r24, 0x01	; 1
 34e:	09 f0       	breq	.+2      	; 0x352 <main+0x23a>
 350:	01 cf       	rjmp	.-510    	; 0x154 <main+0x3c>
			spiWrite('a');
 352:	81 e6       	ldi	r24, 0x61	; 97
 354:	0e 94 42 02 	call	0x484	; 0x484 <spiWrite>
			spiWrite(buffRX);
 358:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <buffRX>
 35c:	0e 94 42 02 	call	0x484	; 0x484 <spiWrite>
			PORTD=((PORTD&0x03)|((buffRX<<2)&0xFC));
 360:	2b b1       	in	r18, 0x0b	; 11
 362:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <buffRX>
 366:	89 2f       	mov	r24, r25
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	88 0f       	add	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	92 2f       	mov	r25, r18
 374:	93 70       	andi	r25, 0x03	; 3
 376:	89 2b       	or	r24, r25
 378:	8b b9       	out	0x0b, r24	; 11
			PORTB=((PORTB&0xFC)|((buffRX>>6)&0x03));
 37a:	95 b1       	in	r25, 0x05	; 5
 37c:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <buffRX>
 380:	9c 7f       	andi	r25, 0xFC	; 252
 382:	82 95       	swap	r24
 384:	86 95       	lsr	r24
 386:	86 95       	lsr	r24
 388:	83 70       	andi	r24, 0x03	; 3
 38a:	89 2b       	or	r24, r25
 38c:	85 b9       	out	0x05, r24	; 5
			leer_uart=0;
 38e:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__data_end>
		}
		
    }
 392:	e0 ce       	rjmp	.-576    	; 0x154 <main+0x3c>

00000394 <__vector_18>:
		flag=0;
	}
}


ISR(USART_RX_vect){
 394:	1f 92       	push	r1
 396:	0f 92       	push	r0
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	0f 92       	push	r0
 39c:	11 24       	eor	r1, r1
 39e:	8f 93       	push	r24
	leer_uart=1;
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
	buffRX=UDR0;
 3a6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 3aa:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <buffRX>
 3ae:	8f 91       	pop	r24
 3b0:	0f 90       	pop	r0
 3b2:	0f be       	out	0x3f, r0	; 63
 3b4:	0f 90       	pop	r0
 3b6:	1f 90       	pop	r1
 3b8:	18 95       	reti

000003ba <spiInit>:
unsigned spiDataReady(){
	if(SPSR &(1<<SPIF))
	return 1;
	else
	return 0;
}
 3ba:	e8 2f       	mov	r30, r24
 3bc:	84 ff       	sbrs	r24, 4
 3be:	52 c0       	rjmp	.+164    	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 3c0:	84 b1       	in	r24, 0x04	; 4
 3c2:	8c 62       	ori	r24, 0x2C	; 44
 3c4:	84 b9       	out	0x04, r24	; 4
 3c6:	84 b1       	in	r24, 0x04	; 4
 3c8:	8f 7e       	andi	r24, 0xEF	; 239
 3ca:	84 b9       	out	0x04, r24	; 4
 3cc:	8c b5       	in	r24, 0x2c	; 44
 3ce:	80 61       	ori	r24, 0x10	; 16
 3d0:	8c bd       	out	0x2c, r24	; 44
 3d2:	e7 70       	andi	r30, 0x07	; 7
 3d4:	8e 2f       	mov	r24, r30
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	87 30       	cpi	r24, 0x07	; 7
 3da:	91 05       	cpc	r25, r1
 3dc:	08 f0       	brcs	.+2      	; 0x3e0 <spiInit+0x26>
 3de:	4b c0       	rjmp	.+150    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 3e0:	fc 01       	movw	r30, r24
 3e2:	ec 5c       	subi	r30, 0xCC	; 204
 3e4:	ff 4f       	sbci	r31, 0xFF	; 255
 3e6:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__tablejump2__>
 3ea:	8c b5       	in	r24, 0x2c	; 44
 3ec:	8c 7f       	andi	r24, 0xFC	; 252
 3ee:	8c bd       	out	0x2c, r24	; 44
 3f0:	8d b5       	in	r24, 0x2d	; 45
 3f2:	81 60       	ori	r24, 0x01	; 1
 3f4:	8d bd       	out	0x2d, r24	; 45
 3f6:	3f c0       	rjmp	.+126    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 3f8:	8c b5       	in	r24, 0x2c	; 44
 3fa:	8c 7f       	andi	r24, 0xFC	; 252
 3fc:	8c bd       	out	0x2c, r24	; 44
 3fe:	8d b5       	in	r24, 0x2d	; 45
 400:	8e 7f       	andi	r24, 0xFE	; 254
 402:	8d bd       	out	0x2d, r24	; 45
 404:	38 c0       	rjmp	.+112    	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 406:	8c b5       	in	r24, 0x2c	; 44
 408:	81 60       	ori	r24, 0x01	; 1
 40a:	8c bd       	out	0x2c, r24	; 44
 40c:	8c b5       	in	r24, 0x2c	; 44
 40e:	8d 7f       	andi	r24, 0xFD	; 253
 410:	8c bd       	out	0x2c, r24	; 44
 412:	8d b5       	in	r24, 0x2d	; 45
 414:	81 60       	ori	r24, 0x01	; 1
 416:	8d bd       	out	0x2d, r24	; 45
 418:	2e c0       	rjmp	.+92     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 41a:	8c b5       	in	r24, 0x2c	; 44
 41c:	81 60       	ori	r24, 0x01	; 1
 41e:	8c bd       	out	0x2c, r24	; 44
 420:	8c b5       	in	r24, 0x2c	; 44
 422:	8d 7f       	andi	r24, 0xFD	; 253
 424:	8c bd       	out	0x2c, r24	; 44
 426:	8d b5       	in	r24, 0x2d	; 45
 428:	8e 7f       	andi	r24, 0xFE	; 254
 42a:	8d bd       	out	0x2d, r24	; 45
 42c:	24 c0       	rjmp	.+72     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 42e:	8c b5       	in	r24, 0x2c	; 44
 430:	8e 7f       	andi	r24, 0xFE	; 254
 432:	8c bd       	out	0x2c, r24	; 44
 434:	8c b5       	in	r24, 0x2c	; 44
 436:	82 60       	ori	r24, 0x02	; 2
 438:	8c bd       	out	0x2c, r24	; 44
 43a:	8d b5       	in	r24, 0x2d	; 45
 43c:	81 60       	ori	r24, 0x01	; 1
 43e:	8d bd       	out	0x2d, r24	; 45
 440:	1a c0       	rjmp	.+52     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 442:	8c b5       	in	r24, 0x2c	; 44
 444:	8e 7f       	andi	r24, 0xFE	; 254
 446:	8c bd       	out	0x2c, r24	; 44
 448:	8c b5       	in	r24, 0x2c	; 44
 44a:	82 60       	ori	r24, 0x02	; 2
 44c:	8c bd       	out	0x2c, r24	; 44
 44e:	8d b5       	in	r24, 0x2d	; 45
 450:	8e 7f       	andi	r24, 0xFE	; 254
 452:	8d bd       	out	0x2d, r24	; 45
 454:	10 c0       	rjmp	.+32     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 456:	8c b5       	in	r24, 0x2c	; 44
 458:	83 60       	ori	r24, 0x03	; 3
 45a:	8c bd       	out	0x2c, r24	; 44
 45c:	8d b5       	in	r24, 0x2d	; 45
 45e:	8e 7f       	andi	r24, 0xFE	; 254
 460:	8d bd       	out	0x2d, r24	; 45
 462:	09 c0       	rjmp	.+18     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 464:	84 b1       	in	r24, 0x04	; 4
 466:	80 61       	ori	r24, 0x10	; 16
 468:	84 b9       	out	0x04, r24	; 4
 46a:	84 b1       	in	r24, 0x04	; 4
 46c:	83 7d       	andi	r24, 0xD3	; 211
 46e:	84 b9       	out	0x04, r24	; 4
 470:	8c b5       	in	r24, 0x2c	; 44
 472:	8f 7e       	andi	r24, 0xEF	; 239
 474:	8c bd       	out	0x2c, r24	; 44
 476:	8c b5       	in	r24, 0x2c	; 44
 478:	46 2b       	or	r20, r22
 47a:	24 2b       	or	r18, r20
 47c:	28 2b       	or	r18, r24
 47e:	20 64       	ori	r18, 0x40	; 64
 480:	2c bd       	out	0x2c, r18	; 44
 482:	08 95       	ret

00000484 <spiWrite>:
 484:	8e bd       	out	0x2e, r24	; 46
 486:	08 95       	ret

00000488 <spiRead>:

uint8_t spiRead(void){
	while(!(SPSR&(1<<SPIF)));//ESPERA A QUE SE COMPLETE DE RECIBIR TODA LA INFO
 488:	0d b4       	in	r0, 0x2d	; 45
 48a:	07 fe       	sbrs	r0, 7
 48c:	fd cf       	rjmp	.-6      	; 0x488 <spiRead>
	return(SPDR);//LEE LA INFORMACIÓN
 48e:	8e b5       	in	r24, 0x2e	; 46
 490:	08 95       	ret

00000492 <__subsf3>:
 492:	50 58       	subi	r21, 0x80	; 128

00000494 <__addsf3>:
 494:	bb 27       	eor	r27, r27
 496:	aa 27       	eor	r26, r26
 498:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__addsf3x>
 49c:	0c 94 b2 03 	jmp	0x764	; 0x764 <__fp_round>
 4a0:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscA>
 4a4:	38 f0       	brcs	.+14     	; 0x4b4 <__addsf3+0x20>
 4a6:	0e 94 ab 03 	call	0x756	; 0x756 <__fp_pscB>
 4aa:	20 f0       	brcs	.+8      	; 0x4b4 <__addsf3+0x20>
 4ac:	39 f4       	brne	.+14     	; 0x4bc <__addsf3+0x28>
 4ae:	9f 3f       	cpi	r25, 0xFF	; 255
 4b0:	19 f4       	brne	.+6      	; 0x4b8 <__addsf3+0x24>
 4b2:	26 f4       	brtc	.+8      	; 0x4bc <__addsf3+0x28>
 4b4:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_nan>
 4b8:	0e f4       	brtc	.+2      	; 0x4bc <__addsf3+0x28>
 4ba:	e0 95       	com	r30
 4bc:	e7 fb       	bst	r30, 7
 4be:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_inf>

000004c2 <__addsf3x>:
 4c2:	e9 2f       	mov	r30, r25
 4c4:	0e 94 c3 03 	call	0x786	; 0x786 <__fp_split3>
 4c8:	58 f3       	brcs	.-42     	; 0x4a0 <__addsf3+0xc>
 4ca:	ba 17       	cp	r27, r26
 4cc:	62 07       	cpc	r22, r18
 4ce:	73 07       	cpc	r23, r19
 4d0:	84 07       	cpc	r24, r20
 4d2:	95 07       	cpc	r25, r21
 4d4:	20 f0       	brcs	.+8      	; 0x4de <__addsf3x+0x1c>
 4d6:	79 f4       	brne	.+30     	; 0x4f6 <__addsf3x+0x34>
 4d8:	a6 f5       	brtc	.+104    	; 0x542 <__addsf3x+0x80>
 4da:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_zero>
 4de:	0e f4       	brtc	.+2      	; 0x4e2 <__addsf3x+0x20>
 4e0:	e0 95       	com	r30
 4e2:	0b 2e       	mov	r0, r27
 4e4:	ba 2f       	mov	r27, r26
 4e6:	a0 2d       	mov	r26, r0
 4e8:	0b 01       	movw	r0, r22
 4ea:	b9 01       	movw	r22, r18
 4ec:	90 01       	movw	r18, r0
 4ee:	0c 01       	movw	r0, r24
 4f0:	ca 01       	movw	r24, r20
 4f2:	a0 01       	movw	r20, r0
 4f4:	11 24       	eor	r1, r1
 4f6:	ff 27       	eor	r31, r31
 4f8:	59 1b       	sub	r21, r25
 4fa:	99 f0       	breq	.+38     	; 0x522 <__addsf3x+0x60>
 4fc:	59 3f       	cpi	r21, 0xF9	; 249
 4fe:	50 f4       	brcc	.+20     	; 0x514 <__addsf3x+0x52>
 500:	50 3e       	cpi	r21, 0xE0	; 224
 502:	68 f1       	brcs	.+90     	; 0x55e <__addsf3x+0x9c>
 504:	1a 16       	cp	r1, r26
 506:	f0 40       	sbci	r31, 0x00	; 0
 508:	a2 2f       	mov	r26, r18
 50a:	23 2f       	mov	r18, r19
 50c:	34 2f       	mov	r19, r20
 50e:	44 27       	eor	r20, r20
 510:	58 5f       	subi	r21, 0xF8	; 248
 512:	f3 cf       	rjmp	.-26     	; 0x4fa <__addsf3x+0x38>
 514:	46 95       	lsr	r20
 516:	37 95       	ror	r19
 518:	27 95       	ror	r18
 51a:	a7 95       	ror	r26
 51c:	f0 40       	sbci	r31, 0x00	; 0
 51e:	53 95       	inc	r21
 520:	c9 f7       	brne	.-14     	; 0x514 <__addsf3x+0x52>
 522:	7e f4       	brtc	.+30     	; 0x542 <__addsf3x+0x80>
 524:	1f 16       	cp	r1, r31
 526:	ba 0b       	sbc	r27, r26
 528:	62 0b       	sbc	r22, r18
 52a:	73 0b       	sbc	r23, r19
 52c:	84 0b       	sbc	r24, r20
 52e:	ba f0       	brmi	.+46     	; 0x55e <__addsf3x+0x9c>
 530:	91 50       	subi	r25, 0x01	; 1
 532:	a1 f0       	breq	.+40     	; 0x55c <__addsf3x+0x9a>
 534:	ff 0f       	add	r31, r31
 536:	bb 1f       	adc	r27, r27
 538:	66 1f       	adc	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	c2 f7       	brpl	.-16     	; 0x530 <__addsf3x+0x6e>
 540:	0e c0       	rjmp	.+28     	; 0x55e <__addsf3x+0x9c>
 542:	ba 0f       	add	r27, r26
 544:	62 1f       	adc	r22, r18
 546:	73 1f       	adc	r23, r19
 548:	84 1f       	adc	r24, r20
 54a:	48 f4       	brcc	.+18     	; 0x55e <__addsf3x+0x9c>
 54c:	87 95       	ror	r24
 54e:	77 95       	ror	r23
 550:	67 95       	ror	r22
 552:	b7 95       	ror	r27
 554:	f7 95       	ror	r31
 556:	9e 3f       	cpi	r25, 0xFE	; 254
 558:	08 f0       	brcs	.+2      	; 0x55c <__addsf3x+0x9a>
 55a:	b0 cf       	rjmp	.-160    	; 0x4bc <__addsf3+0x28>
 55c:	93 95       	inc	r25
 55e:	88 0f       	add	r24, r24
 560:	08 f0       	brcs	.+2      	; 0x564 <__addsf3x+0xa2>
 562:	99 27       	eor	r25, r25
 564:	ee 0f       	add	r30, r30
 566:	97 95       	ror	r25
 568:	87 95       	ror	r24
 56a:	08 95       	ret

0000056c <__divsf3>:
 56c:	0e 94 ca 02 	call	0x594	; 0x594 <__divsf3x>
 570:	0c 94 b2 03 	jmp	0x764	; 0x764 <__fp_round>
 574:	0e 94 ab 03 	call	0x756	; 0x756 <__fp_pscB>
 578:	58 f0       	brcs	.+22     	; 0x590 <__divsf3+0x24>
 57a:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscA>
 57e:	40 f0       	brcs	.+16     	; 0x590 <__divsf3+0x24>
 580:	29 f4       	brne	.+10     	; 0x58c <__divsf3+0x20>
 582:	5f 3f       	cpi	r21, 0xFF	; 255
 584:	29 f0       	breq	.+10     	; 0x590 <__divsf3+0x24>
 586:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_inf>
 58a:	51 11       	cpse	r21, r1
 58c:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_szero>
 590:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_nan>

00000594 <__divsf3x>:
 594:	0e 94 c3 03 	call	0x786	; 0x786 <__fp_split3>
 598:	68 f3       	brcs	.-38     	; 0x574 <__divsf3+0x8>

0000059a <__divsf3_pse>:
 59a:	99 23       	and	r25, r25
 59c:	b1 f3       	breq	.-20     	; 0x58a <__divsf3+0x1e>
 59e:	55 23       	and	r21, r21
 5a0:	91 f3       	breq	.-28     	; 0x586 <__divsf3+0x1a>
 5a2:	95 1b       	sub	r25, r21
 5a4:	55 0b       	sbc	r21, r21
 5a6:	bb 27       	eor	r27, r27
 5a8:	aa 27       	eor	r26, r26
 5aa:	62 17       	cp	r22, r18
 5ac:	73 07       	cpc	r23, r19
 5ae:	84 07       	cpc	r24, r20
 5b0:	38 f0       	brcs	.+14     	; 0x5c0 <__divsf3_pse+0x26>
 5b2:	9f 5f       	subi	r25, 0xFF	; 255
 5b4:	5f 4f       	sbci	r21, 0xFF	; 255
 5b6:	22 0f       	add	r18, r18
 5b8:	33 1f       	adc	r19, r19
 5ba:	44 1f       	adc	r20, r20
 5bc:	aa 1f       	adc	r26, r26
 5be:	a9 f3       	breq	.-22     	; 0x5aa <__divsf3_pse+0x10>
 5c0:	35 d0       	rcall	.+106    	; 0x62c <__divsf3_pse+0x92>
 5c2:	0e 2e       	mov	r0, r30
 5c4:	3a f0       	brmi	.+14     	; 0x5d4 <__divsf3_pse+0x3a>
 5c6:	e0 e8       	ldi	r30, 0x80	; 128
 5c8:	32 d0       	rcall	.+100    	; 0x62e <__divsf3_pse+0x94>
 5ca:	91 50       	subi	r25, 0x01	; 1
 5cc:	50 40       	sbci	r21, 0x00	; 0
 5ce:	e6 95       	lsr	r30
 5d0:	00 1c       	adc	r0, r0
 5d2:	ca f7       	brpl	.-14     	; 0x5c6 <__divsf3_pse+0x2c>
 5d4:	2b d0       	rcall	.+86     	; 0x62c <__divsf3_pse+0x92>
 5d6:	fe 2f       	mov	r31, r30
 5d8:	29 d0       	rcall	.+82     	; 0x62c <__divsf3_pse+0x92>
 5da:	66 0f       	add	r22, r22
 5dc:	77 1f       	adc	r23, r23
 5de:	88 1f       	adc	r24, r24
 5e0:	bb 1f       	adc	r27, r27
 5e2:	26 17       	cp	r18, r22
 5e4:	37 07       	cpc	r19, r23
 5e6:	48 07       	cpc	r20, r24
 5e8:	ab 07       	cpc	r26, r27
 5ea:	b0 e8       	ldi	r27, 0x80	; 128
 5ec:	09 f0       	breq	.+2      	; 0x5f0 <__divsf3_pse+0x56>
 5ee:	bb 0b       	sbc	r27, r27
 5f0:	80 2d       	mov	r24, r0
 5f2:	bf 01       	movw	r22, r30
 5f4:	ff 27       	eor	r31, r31
 5f6:	93 58       	subi	r25, 0x83	; 131
 5f8:	5f 4f       	sbci	r21, 0xFF	; 255
 5fa:	3a f0       	brmi	.+14     	; 0x60a <__divsf3_pse+0x70>
 5fc:	9e 3f       	cpi	r25, 0xFE	; 254
 5fe:	51 05       	cpc	r21, r1
 600:	78 f0       	brcs	.+30     	; 0x620 <__divsf3_pse+0x86>
 602:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_inf>
 606:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_szero>
 60a:	5f 3f       	cpi	r21, 0xFF	; 255
 60c:	e4 f3       	brlt	.-8      	; 0x606 <__divsf3_pse+0x6c>
 60e:	98 3e       	cpi	r25, 0xE8	; 232
 610:	d4 f3       	brlt	.-12     	; 0x606 <__divsf3_pse+0x6c>
 612:	86 95       	lsr	r24
 614:	77 95       	ror	r23
 616:	67 95       	ror	r22
 618:	b7 95       	ror	r27
 61a:	f7 95       	ror	r31
 61c:	9f 5f       	subi	r25, 0xFF	; 255
 61e:	c9 f7       	brne	.-14     	; 0x612 <__divsf3_pse+0x78>
 620:	88 0f       	add	r24, r24
 622:	91 1d       	adc	r25, r1
 624:	96 95       	lsr	r25
 626:	87 95       	ror	r24
 628:	97 f9       	bld	r25, 7
 62a:	08 95       	ret
 62c:	e1 e0       	ldi	r30, 0x01	; 1
 62e:	66 0f       	add	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	bb 1f       	adc	r27, r27
 636:	62 17       	cp	r22, r18
 638:	73 07       	cpc	r23, r19
 63a:	84 07       	cpc	r24, r20
 63c:	ba 07       	cpc	r27, r26
 63e:	20 f0       	brcs	.+8      	; 0x648 <__divsf3_pse+0xae>
 640:	62 1b       	sub	r22, r18
 642:	73 0b       	sbc	r23, r19
 644:	84 0b       	sbc	r24, r20
 646:	ba 0b       	sbc	r27, r26
 648:	ee 1f       	adc	r30, r30
 64a:	88 f7       	brcc	.-30     	; 0x62e <__divsf3_pse+0x94>
 64c:	e0 95       	com	r30
 64e:	08 95       	ret

00000650 <__fixsfsi>:
 650:	0e 94 2f 03 	call	0x65e	; 0x65e <__fixunssfsi>
 654:	68 94       	set
 656:	b1 11       	cpse	r27, r1
 658:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_szero>
 65c:	08 95       	ret

0000065e <__fixunssfsi>:
 65e:	0e 94 cb 03 	call	0x796	; 0x796 <__fp_splitA>
 662:	88 f0       	brcs	.+34     	; 0x686 <__fixunssfsi+0x28>
 664:	9f 57       	subi	r25, 0x7F	; 127
 666:	98 f0       	brcs	.+38     	; 0x68e <__fixunssfsi+0x30>
 668:	b9 2f       	mov	r27, r25
 66a:	99 27       	eor	r25, r25
 66c:	b7 51       	subi	r27, 0x17	; 23
 66e:	b0 f0       	brcs	.+44     	; 0x69c <__fixunssfsi+0x3e>
 670:	e1 f0       	breq	.+56     	; 0x6aa <__fixunssfsi+0x4c>
 672:	66 0f       	add	r22, r22
 674:	77 1f       	adc	r23, r23
 676:	88 1f       	adc	r24, r24
 678:	99 1f       	adc	r25, r25
 67a:	1a f0       	brmi	.+6      	; 0x682 <__fixunssfsi+0x24>
 67c:	ba 95       	dec	r27
 67e:	c9 f7       	brne	.-14     	; 0x672 <__fixunssfsi+0x14>
 680:	14 c0       	rjmp	.+40     	; 0x6aa <__fixunssfsi+0x4c>
 682:	b1 30       	cpi	r27, 0x01	; 1
 684:	91 f0       	breq	.+36     	; 0x6aa <__fixunssfsi+0x4c>
 686:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__fp_zero>
 68a:	b1 e0       	ldi	r27, 0x01	; 1
 68c:	08 95       	ret
 68e:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__fp_zero>
 692:	67 2f       	mov	r22, r23
 694:	78 2f       	mov	r23, r24
 696:	88 27       	eor	r24, r24
 698:	b8 5f       	subi	r27, 0xF8	; 248
 69a:	39 f0       	breq	.+14     	; 0x6aa <__fixunssfsi+0x4c>
 69c:	b9 3f       	cpi	r27, 0xF9	; 249
 69e:	cc f3       	brlt	.-14     	; 0x692 <__fixunssfsi+0x34>
 6a0:	86 95       	lsr	r24
 6a2:	77 95       	ror	r23
 6a4:	67 95       	ror	r22
 6a6:	b3 95       	inc	r27
 6a8:	d9 f7       	brne	.-10     	; 0x6a0 <__fixunssfsi+0x42>
 6aa:	3e f4       	brtc	.+14     	; 0x6ba <__fixunssfsi+0x5c>
 6ac:	90 95       	com	r25
 6ae:	80 95       	com	r24
 6b0:	70 95       	com	r23
 6b2:	61 95       	neg	r22
 6b4:	7f 4f       	sbci	r23, 0xFF	; 255
 6b6:	8f 4f       	sbci	r24, 0xFF	; 255
 6b8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ba:	08 95       	ret

000006bc <__floatunsisf>:
 6bc:	e8 94       	clt
 6be:	09 c0       	rjmp	.+18     	; 0x6d2 <__floatsisf+0x12>

000006c0 <__floatsisf>:
 6c0:	97 fb       	bst	r25, 7
 6c2:	3e f4       	brtc	.+14     	; 0x6d2 <__floatsisf+0x12>
 6c4:	90 95       	com	r25
 6c6:	80 95       	com	r24
 6c8:	70 95       	com	r23
 6ca:	61 95       	neg	r22
 6cc:	7f 4f       	sbci	r23, 0xFF	; 255
 6ce:	8f 4f       	sbci	r24, 0xFF	; 255
 6d0:	9f 4f       	sbci	r25, 0xFF	; 255
 6d2:	99 23       	and	r25, r25
 6d4:	a9 f0       	breq	.+42     	; 0x700 <__floatsisf+0x40>
 6d6:	f9 2f       	mov	r31, r25
 6d8:	96 e9       	ldi	r25, 0x96	; 150
 6da:	bb 27       	eor	r27, r27
 6dc:	93 95       	inc	r25
 6de:	f6 95       	lsr	r31
 6e0:	87 95       	ror	r24
 6e2:	77 95       	ror	r23
 6e4:	67 95       	ror	r22
 6e6:	b7 95       	ror	r27
 6e8:	f1 11       	cpse	r31, r1
 6ea:	f8 cf       	rjmp	.-16     	; 0x6dc <__floatsisf+0x1c>
 6ec:	fa f4       	brpl	.+62     	; 0x72c <__floatsisf+0x6c>
 6ee:	bb 0f       	add	r27, r27
 6f0:	11 f4       	brne	.+4      	; 0x6f6 <__floatsisf+0x36>
 6f2:	60 ff       	sbrs	r22, 0
 6f4:	1b c0       	rjmp	.+54     	; 0x72c <__floatsisf+0x6c>
 6f6:	6f 5f       	subi	r22, 0xFF	; 255
 6f8:	7f 4f       	sbci	r23, 0xFF	; 255
 6fa:	8f 4f       	sbci	r24, 0xFF	; 255
 6fc:	9f 4f       	sbci	r25, 0xFF	; 255
 6fe:	16 c0       	rjmp	.+44     	; 0x72c <__floatsisf+0x6c>
 700:	88 23       	and	r24, r24
 702:	11 f0       	breq	.+4      	; 0x708 <__floatsisf+0x48>
 704:	96 e9       	ldi	r25, 0x96	; 150
 706:	11 c0       	rjmp	.+34     	; 0x72a <__floatsisf+0x6a>
 708:	77 23       	and	r23, r23
 70a:	21 f0       	breq	.+8      	; 0x714 <__floatsisf+0x54>
 70c:	9e e8       	ldi	r25, 0x8E	; 142
 70e:	87 2f       	mov	r24, r23
 710:	76 2f       	mov	r23, r22
 712:	05 c0       	rjmp	.+10     	; 0x71e <__floatsisf+0x5e>
 714:	66 23       	and	r22, r22
 716:	71 f0       	breq	.+28     	; 0x734 <__floatsisf+0x74>
 718:	96 e8       	ldi	r25, 0x86	; 134
 71a:	86 2f       	mov	r24, r22
 71c:	70 e0       	ldi	r23, 0x00	; 0
 71e:	60 e0       	ldi	r22, 0x00	; 0
 720:	2a f0       	brmi	.+10     	; 0x72c <__floatsisf+0x6c>
 722:	9a 95       	dec	r25
 724:	66 0f       	add	r22, r22
 726:	77 1f       	adc	r23, r23
 728:	88 1f       	adc	r24, r24
 72a:	da f7       	brpl	.-10     	; 0x722 <__floatsisf+0x62>
 72c:	88 0f       	add	r24, r24
 72e:	96 95       	lsr	r25
 730:	87 95       	ror	r24
 732:	97 f9       	bld	r25, 7
 734:	08 95       	ret

00000736 <__fp_inf>:
 736:	97 f9       	bld	r25, 7
 738:	9f 67       	ori	r25, 0x7F	; 127
 73a:	80 e8       	ldi	r24, 0x80	; 128
 73c:	70 e0       	ldi	r23, 0x00	; 0
 73e:	60 e0       	ldi	r22, 0x00	; 0
 740:	08 95       	ret

00000742 <__fp_nan>:
 742:	9f ef       	ldi	r25, 0xFF	; 255
 744:	80 ec       	ldi	r24, 0xC0	; 192
 746:	08 95       	ret

00000748 <__fp_pscA>:
 748:	00 24       	eor	r0, r0
 74a:	0a 94       	dec	r0
 74c:	16 16       	cp	r1, r22
 74e:	17 06       	cpc	r1, r23
 750:	18 06       	cpc	r1, r24
 752:	09 06       	cpc	r0, r25
 754:	08 95       	ret

00000756 <__fp_pscB>:
 756:	00 24       	eor	r0, r0
 758:	0a 94       	dec	r0
 75a:	12 16       	cp	r1, r18
 75c:	13 06       	cpc	r1, r19
 75e:	14 06       	cpc	r1, r20
 760:	05 06       	cpc	r0, r21
 762:	08 95       	ret

00000764 <__fp_round>:
 764:	09 2e       	mov	r0, r25
 766:	03 94       	inc	r0
 768:	00 0c       	add	r0, r0
 76a:	11 f4       	brne	.+4      	; 0x770 <__fp_round+0xc>
 76c:	88 23       	and	r24, r24
 76e:	52 f0       	brmi	.+20     	; 0x784 <__fp_round+0x20>
 770:	bb 0f       	add	r27, r27
 772:	40 f4       	brcc	.+16     	; 0x784 <__fp_round+0x20>
 774:	bf 2b       	or	r27, r31
 776:	11 f4       	brne	.+4      	; 0x77c <__fp_round+0x18>
 778:	60 ff       	sbrs	r22, 0
 77a:	04 c0       	rjmp	.+8      	; 0x784 <__fp_round+0x20>
 77c:	6f 5f       	subi	r22, 0xFF	; 255
 77e:	7f 4f       	sbci	r23, 0xFF	; 255
 780:	8f 4f       	sbci	r24, 0xFF	; 255
 782:	9f 4f       	sbci	r25, 0xFF	; 255
 784:	08 95       	ret

00000786 <__fp_split3>:
 786:	57 fd       	sbrc	r21, 7
 788:	90 58       	subi	r25, 0x80	; 128
 78a:	44 0f       	add	r20, r20
 78c:	55 1f       	adc	r21, r21
 78e:	59 f0       	breq	.+22     	; 0x7a6 <__fp_splitA+0x10>
 790:	5f 3f       	cpi	r21, 0xFF	; 255
 792:	71 f0       	breq	.+28     	; 0x7b0 <__fp_splitA+0x1a>
 794:	47 95       	ror	r20

00000796 <__fp_splitA>:
 796:	88 0f       	add	r24, r24
 798:	97 fb       	bst	r25, 7
 79a:	99 1f       	adc	r25, r25
 79c:	61 f0       	breq	.+24     	; 0x7b6 <__fp_splitA+0x20>
 79e:	9f 3f       	cpi	r25, 0xFF	; 255
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <__fp_splitA+0x2a>
 7a2:	87 95       	ror	r24
 7a4:	08 95       	ret
 7a6:	12 16       	cp	r1, r18
 7a8:	13 06       	cpc	r1, r19
 7aa:	14 06       	cpc	r1, r20
 7ac:	55 1f       	adc	r21, r21
 7ae:	f2 cf       	rjmp	.-28     	; 0x794 <__fp_split3+0xe>
 7b0:	46 95       	lsr	r20
 7b2:	f1 df       	rcall	.-30     	; 0x796 <__fp_splitA>
 7b4:	08 c0       	rjmp	.+16     	; 0x7c6 <__fp_splitA+0x30>
 7b6:	16 16       	cp	r1, r22
 7b8:	17 06       	cpc	r1, r23
 7ba:	18 06       	cpc	r1, r24
 7bc:	99 1f       	adc	r25, r25
 7be:	f1 cf       	rjmp	.-30     	; 0x7a2 <__fp_splitA+0xc>
 7c0:	86 95       	lsr	r24
 7c2:	71 05       	cpc	r23, r1
 7c4:	61 05       	cpc	r22, r1
 7c6:	08 94       	sec
 7c8:	08 95       	ret

000007ca <__fp_zero>:
 7ca:	e8 94       	clt

000007cc <__fp_szero>:
 7cc:	bb 27       	eor	r27, r27
 7ce:	66 27       	eor	r22, r22
 7d0:	77 27       	eor	r23, r23
 7d2:	cb 01       	movw	r24, r22
 7d4:	97 f9       	bld	r25, 7
 7d6:	08 95       	ret

000007d8 <__mulsf3>:
 7d8:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__mulsf3x>
 7dc:	0c 94 b2 03 	jmp	0x764	; 0x764 <__fp_round>
 7e0:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_pscA>
 7e4:	38 f0       	brcs	.+14     	; 0x7f4 <__mulsf3+0x1c>
 7e6:	0e 94 ab 03 	call	0x756	; 0x756 <__fp_pscB>
 7ea:	20 f0       	brcs	.+8      	; 0x7f4 <__mulsf3+0x1c>
 7ec:	95 23       	and	r25, r21
 7ee:	11 f0       	breq	.+4      	; 0x7f4 <__mulsf3+0x1c>
 7f0:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_inf>
 7f4:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_nan>
 7f8:	11 24       	eor	r1, r1
 7fa:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_szero>

000007fe <__mulsf3x>:
 7fe:	0e 94 c3 03 	call	0x786	; 0x786 <__fp_split3>
 802:	70 f3       	brcs	.-36     	; 0x7e0 <__mulsf3+0x8>

00000804 <__mulsf3_pse>:
 804:	95 9f       	mul	r25, r21
 806:	c1 f3       	breq	.-16     	; 0x7f8 <__mulsf3+0x20>
 808:	95 0f       	add	r25, r21
 80a:	50 e0       	ldi	r21, 0x00	; 0
 80c:	55 1f       	adc	r21, r21
 80e:	62 9f       	mul	r22, r18
 810:	f0 01       	movw	r30, r0
 812:	72 9f       	mul	r23, r18
 814:	bb 27       	eor	r27, r27
 816:	f0 0d       	add	r31, r0
 818:	b1 1d       	adc	r27, r1
 81a:	63 9f       	mul	r22, r19
 81c:	aa 27       	eor	r26, r26
 81e:	f0 0d       	add	r31, r0
 820:	b1 1d       	adc	r27, r1
 822:	aa 1f       	adc	r26, r26
 824:	64 9f       	mul	r22, r20
 826:	66 27       	eor	r22, r22
 828:	b0 0d       	add	r27, r0
 82a:	a1 1d       	adc	r26, r1
 82c:	66 1f       	adc	r22, r22
 82e:	82 9f       	mul	r24, r18
 830:	22 27       	eor	r18, r18
 832:	b0 0d       	add	r27, r0
 834:	a1 1d       	adc	r26, r1
 836:	62 1f       	adc	r22, r18
 838:	73 9f       	mul	r23, r19
 83a:	b0 0d       	add	r27, r0
 83c:	a1 1d       	adc	r26, r1
 83e:	62 1f       	adc	r22, r18
 840:	83 9f       	mul	r24, r19
 842:	a0 0d       	add	r26, r0
 844:	61 1d       	adc	r22, r1
 846:	22 1f       	adc	r18, r18
 848:	74 9f       	mul	r23, r20
 84a:	33 27       	eor	r19, r19
 84c:	a0 0d       	add	r26, r0
 84e:	61 1d       	adc	r22, r1
 850:	23 1f       	adc	r18, r19
 852:	84 9f       	mul	r24, r20
 854:	60 0d       	add	r22, r0
 856:	21 1d       	adc	r18, r1
 858:	82 2f       	mov	r24, r18
 85a:	76 2f       	mov	r23, r22
 85c:	6a 2f       	mov	r22, r26
 85e:	11 24       	eor	r1, r1
 860:	9f 57       	subi	r25, 0x7F	; 127
 862:	50 40       	sbci	r21, 0x00	; 0
 864:	9a f0       	brmi	.+38     	; 0x88c <__mulsf3_pse+0x88>
 866:	f1 f0       	breq	.+60     	; 0x8a4 <__mulsf3_pse+0xa0>
 868:	88 23       	and	r24, r24
 86a:	4a f0       	brmi	.+18     	; 0x87e <__mulsf3_pse+0x7a>
 86c:	ee 0f       	add	r30, r30
 86e:	ff 1f       	adc	r31, r31
 870:	bb 1f       	adc	r27, r27
 872:	66 1f       	adc	r22, r22
 874:	77 1f       	adc	r23, r23
 876:	88 1f       	adc	r24, r24
 878:	91 50       	subi	r25, 0x01	; 1
 87a:	50 40       	sbci	r21, 0x00	; 0
 87c:	a9 f7       	brne	.-22     	; 0x868 <__mulsf3_pse+0x64>
 87e:	9e 3f       	cpi	r25, 0xFE	; 254
 880:	51 05       	cpc	r21, r1
 882:	80 f0       	brcs	.+32     	; 0x8a4 <__mulsf3_pse+0xa0>
 884:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_inf>
 888:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_szero>
 88c:	5f 3f       	cpi	r21, 0xFF	; 255
 88e:	e4 f3       	brlt	.-8      	; 0x888 <__mulsf3_pse+0x84>
 890:	98 3e       	cpi	r25, 0xE8	; 232
 892:	d4 f3       	brlt	.-12     	; 0x888 <__mulsf3_pse+0x84>
 894:	86 95       	lsr	r24
 896:	77 95       	ror	r23
 898:	67 95       	ror	r22
 89a:	b7 95       	ror	r27
 89c:	f7 95       	ror	r31
 89e:	e7 95       	ror	r30
 8a0:	9f 5f       	subi	r25, 0xFF	; 255
 8a2:	c1 f7       	brne	.-16     	; 0x894 <__mulsf3_pse+0x90>
 8a4:	fe 2b       	or	r31, r30
 8a6:	88 0f       	add	r24, r24
 8a8:	91 1d       	adc	r25, r1
 8aa:	96 95       	lsr	r25
 8ac:	87 95       	ror	r24
 8ae:	97 f9       	bld	r25, 7
 8b0:	08 95       	ret

000008b2 <__divmodhi4>:
 8b2:	97 fb       	bst	r25, 7
 8b4:	07 2e       	mov	r0, r23
 8b6:	16 f4       	brtc	.+4      	; 0x8bc <__divmodhi4+0xa>
 8b8:	00 94       	com	r0
 8ba:	07 d0       	rcall	.+14     	; 0x8ca <__divmodhi4_neg1>
 8bc:	77 fd       	sbrc	r23, 7
 8be:	09 d0       	rcall	.+18     	; 0x8d2 <__divmodhi4_neg2>
 8c0:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__udivmodhi4>
 8c4:	07 fc       	sbrc	r0, 7
 8c6:	05 d0       	rcall	.+10     	; 0x8d2 <__divmodhi4_neg2>
 8c8:	3e f4       	brtc	.+14     	; 0x8d8 <__divmodhi4_exit>

000008ca <__divmodhi4_neg1>:
 8ca:	90 95       	com	r25
 8cc:	81 95       	neg	r24
 8ce:	9f 4f       	sbci	r25, 0xFF	; 255
 8d0:	08 95       	ret

000008d2 <__divmodhi4_neg2>:
 8d2:	70 95       	com	r23
 8d4:	61 95       	neg	r22
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255

000008d8 <__divmodhi4_exit>:
 8d8:	08 95       	ret

000008da <__tablejump2__>:
 8da:	ee 0f       	add	r30, r30
 8dc:	ff 1f       	adc	r31, r31
 8de:	05 90       	lpm	r0, Z+
 8e0:	f4 91       	lpm	r31, Z
 8e2:	e0 2d       	mov	r30, r0
 8e4:	09 94       	ijmp

000008e6 <__udivmodhi4>:
 8e6:	aa 1b       	sub	r26, r26
 8e8:	bb 1b       	sub	r27, r27
 8ea:	51 e1       	ldi	r21, 0x11	; 17
 8ec:	07 c0       	rjmp	.+14     	; 0x8fc <__udivmodhi4_ep>

000008ee <__udivmodhi4_loop>:
 8ee:	aa 1f       	adc	r26, r26
 8f0:	bb 1f       	adc	r27, r27
 8f2:	a6 17       	cp	r26, r22
 8f4:	b7 07       	cpc	r27, r23
 8f6:	10 f0       	brcs	.+4      	; 0x8fc <__udivmodhi4_ep>
 8f8:	a6 1b       	sub	r26, r22
 8fa:	b7 0b       	sbc	r27, r23

000008fc <__udivmodhi4_ep>:
 8fc:	88 1f       	adc	r24, r24
 8fe:	99 1f       	adc	r25, r25
 900:	5a 95       	dec	r21
 902:	a9 f7       	brne	.-22     	; 0x8ee <__udivmodhi4_loop>
 904:	80 95       	com	r24
 906:	90 95       	com	r25
 908:	bc 01       	movw	r22, r24
 90a:	cd 01       	movw	r24, r26
 90c:	08 95       	ret

0000090e <strcat>:
 90e:	fb 01       	movw	r30, r22
 910:	dc 01       	movw	r26, r24
 912:	0d 90       	ld	r0, X+
 914:	00 20       	and	r0, r0
 916:	e9 f7       	brne	.-6      	; 0x912 <strcat+0x4>
 918:	11 97       	sbiw	r26, 0x01	; 1
 91a:	01 90       	ld	r0, Z+
 91c:	0d 92       	st	X+, r0
 91e:	00 20       	and	r0, r0
 920:	e1 f7       	brne	.-8      	; 0x91a <strcat+0xc>
 922:	08 95       	ret

00000924 <_exit>:
 924:	f8 94       	cli

00000926 <__stop_program>:
 926:	ff cf       	rjmp	.-2      	; 0x926 <__stop_program>
